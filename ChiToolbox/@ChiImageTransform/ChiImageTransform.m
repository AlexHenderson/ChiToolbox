classdef ChiImageTransform < ChiBase
    
% ChiImageTransform  Storage wrapper for image transform output.
%
% Syntax
%   tform = ChiImageTransform();
%   tform = ChiImageTransform(transform);
%   tform = ChiImageTransform(transform,staticcontrolpoints);
%   tform = ChiImageTransform(transform,staticcontrolpoints,movingcontrolpoints);
%   tform = ChiImageTransform(transform,staticcontrolpoints,movingcontrolpoints,method);
%
% Description
%   tform = ChiImageTransform() creates an empty ChiImageTransform object.
% 
%   tform = ChiImageTransform(transform) stores transform, an output of the
%   cpselect function in the Image Processing Toolbox
%
%   tform = ChiImageTransform(transform,staticcontrolpoints) includes
%   staticcontrolpoints produced by the cpselect tool. These control points
%   are from the target image that is not registered.
% 
%   tform =
%   ChiImageTransform(transform,staticcontrolpoints,movingcontrolpoints)
%   includes movingcontrolpoints produced by the cpselect tool. These
%   control points are from the source image that undergoes image
%   registration.
% 
%   tform =
%   ChiImageTransform(transform,staticcontrolpoints,movingcontrolpoints,method)
%   includes a char array containing the name of the projection used. 
% 
% Notes
%   This class is generated by the spatial registration of two
%   images/pictures.
% 
% Copyright (c) 2019, Alex Henderson.
% Licenced under the GNU General Public License (GPL) version 3.
%
% See also 
%   ChiImageFile.registerto cpselect

% Contact email: alex.henderson@manchester.ac.uk
% Licenced under the GNU General Public License (GPL) version 3
% http://www.gnu.org/copyleft/gpl.html
% Other licensing options are available, please contact Alex for details
% If you use this file in your work, please acknowledge the author(s) in
% your publications. 

% The latest version of this file is available on Bitbucket
% https://bitbucket.org/AlexHenderson/chitoolbox

    
    properties
        transform; % Information regarding the image transform process as output by the cpselect tool 
        staticcontrolpoints; % Points of correspondence in the target image
        movingcontrolpoints; % Points of correspondence in the source image (to be registered)
        method; % Name of projection used (default = 'affine')
    end
    
    methods
        % Constructor
        function this = ChiImageTransform(varargin)
            
            switch nargin
                case 0
                case 1
                    this.transform = varargin{1};
                    this.staticcontrolpoints = varargin{2};
                case 2
                    this.transform = varargin{1};
                    this.staticcontrolpoints = varargin{2};
                case 3
                    this.transform = varargin{1};
                    this.staticcontrolpoints = varargin{2};
                    this.movingcontrolpoints = varargin{3};
                case 4
                    this.transform = varargin{1};
                    this.staticcontrolpoints = varargin{2};
                    this.movingcontrolpoints = varargin{3};
                    this.method = varargin{4};
                otherwise
                    error('too many inputs');
            end
            
        end
        
    end
end

